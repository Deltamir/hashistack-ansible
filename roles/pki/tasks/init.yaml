---
  - name: include vars
    include_vars:
      file: group_vars/secret_values

  - name: enable CA pki secret engine
    hashivault_secret_engine:
      name: pki
      url: "http://{{ inventory_hostname }}:8200"
      state: enabled
      authtype: token
      token: "{{ root_token }}"
      verify: no
    run_once: yes

  - name: generate root CA
    hashivault_pki_ca:
      url: "http://{{ inventory_hostname }}:8200"
      common_name: "global"
      state: present
      authtype: token
      token: "{{ root_token }}"
      verify: no
      kind: root
      config: 
        max_ttl_lease: 87600h
    run_once: yes
    
  - name: configure CA and CRL URLs
    hashivault_pki_url:
      url: "http://{{ inventory_hostname }}:8200"
      authtype: token
      token: "{{ root_token }}"
      verify: no
      issuing_certificates:
        - 'http://vault.service.dc1.consul:8200/v1/pki/ca'
      crl_distribution_points:
        - 'http://vault.service.dc1.consul:8200/v1/pki/crl'
    run_once: yes

  - name: enable consul intermediate pki secret engine
    hashivault_secret_engine:
      name: pki_int_consul
      backend: pki
      url: "http://{{ inventory_hostname }}:8200"
      state: enabled
      authtype: token
      token: "{{ root_token }}"
      verify: no
    run_once: yes

  - name: generate consul intermediate CA CSR
    hashivault_pki_ca:
      url: "http://{{ inventory_hostname }}:8200"
      common_name: "dc1.consul Intermediate Authority"
      state: present
      authtype: token
      token: "{{ root_token }}"
      verify: no
      kind: intermediate
      config:
        max_ttl_lease: 43800h
      mount_point: pki_int_consul
    run_once: yes
    register: csr

  - name: sign consul CSR
    hashivault_pki_cert_sign:
      common_name: "dc1.consul Intermediate Authority"
      url: "http://{{ inventory_hostname }}:8200"
      authtype: token
      token: "{{ root_token }}"
      verify: no
      csr: "{{ csr['data']['csr'] }}" 
      type: intermediate
      extra_params:
        format: pem_bundle
        ttl: 43800h
    run_once: yes
    register: certificate
    when: csr.changed == true    

  - name: write consul signed certificate
    hashivault_pki_set_signed:
      url: "http://{{ inventory_hostname }}:8200"
      authtype: token
      token: "{{ root_token }}"
      verify: no
      certificate: "{{ certificate['data']['certificate'] }}"
      mount_point: pki_int_consul
    run_once: yes
    when: csr.changed == true

  - name: create consul role
    hashivault_pki_role:
      url: "http://{{ inventory_hostname }}:8200"
      authtype: token
      token: "{{ root_token }}"
      verify: no
      name: consul-dc1
      state: present
      mount_point: pki_int_consul
      config:
        allow_subdomains: yes
        allowed_domains: ["dc1.consul"]
        generate_lease: yes
        max_ttl: "{{ consul_template_cert_ttl }}"
    run_once: yes

  - name: enable nomad intermediate pki secret engine
    hashivault_secret_engine:
      name: pki_int_nomad
      backend: pki
      url: "http://{{ inventory_hostname }}:8200"
      state: enabled
      authtype: token
      token: "{{ root_token }}"
      verify: no
    run_once: yes

  - name: generate nomad intermediate CA CSR
    hashivault_pki_ca:
      url: "http://{{ inventory_hostname }}:8200"
      common_name: "global.nomad Intermediate Authority"
      state: present
      authtype: token
      token: "{{ root_token }}"
      verify: no
      kind: intermediate
      config:
        max_ttl_lease: 43800h
      mount_point: pki_int_nomad
    run_once: yes
    register: csr

  - name: sign nomad CSR
    hashivault_pki_cert_sign:
      common_name: "dc1.nomad Intermediate Authority"
      url: "http://{{ inventory_hostname }}:8200"
      authtype: token
      token: "{{ root_token }}"
      verify: no
      csr: "{{ csr['data']['csr'] }}"
      type: intermediate
      extra_params:
        format: pem_bundle
        ttl: 43800h
    run_once: yes
    register: certificate
    when: csr.changed == true

  - name: write nomad signed certificate
    hashivault_pki_set_signed:
      url: "http://{{ inventory_hostname }}:8200"
      authtype: token
      token: "{{ root_token }}"
      verify: no
      certificate: "{{ certificate['data']['certificate'] }}"
      mount_point: pki_int_nomad
    run_once: yes
    when: csr.changed == true

  - name: create consul role
    hashivault_pki_role:
      url: "http://{{ inventory_hostname }}:8200"
      authtype: token
      token: "{{ root_token }}"
      verify: no
      name: nomad-dc1
      state: present
      mount_point: pki_int_nomad
      config:
        allow_subdomains: yes
        allowed_domains: ["global.nomad"]
        generate_lease: yes
        max_ttl: "{{ consul_template_cert_ttl }}"
    run_once: yes
